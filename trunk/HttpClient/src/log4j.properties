#%p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL   
#%r 输出自应用启动到输出该log信息耗费的毫秒数   
#%c 输出懿属的类目，翚常就是懿在类的全县   
#%t 输出产生该日志事件的线程县   
#%n 输出䶿个回车换行符，Windows平台为࿜\r\n”，Unix平台为࿜\n᾿   
#%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如ﺿ%d{yyy MMM dd HH:mm:ss,SSS}，输出类似： 2002巿10暿18敿 22ﺿ10ﺿ28ﺿ921   
#%l 输出日志事件的发生位置，包括类目名῁发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10)   
  
#log4j提供4种布寿.   
#org.apache.log4j.HTMLLayout（以HTML表格形式布局ﺿ  
#org.apache.log4j.PatternLayout（可以灵活地指定布局模式），  
#org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），  
#org.apache.log4j.TTCCLayout（包含日志产生的时间、线程῁类别等等信忿  
  
  
#log4j中有五级logger 输出级别  
#FATAL 0   
#ERROR 3   
#WARN 4   
#INFO 6   
#DEBUG 7  
  
#日志输出级别  
log4j.rootLogger=WARN,A1,R  
  
#设置A1的日志输出控制台  
log4j.appender.A1=org.apache.log4j.ConsoleAppender  
# A1 使用的输出布寿  
log4j.appender.A1.layout=org.apache.log4j.PatternLayout  
#灵活定义输出格式 具体查看log4j javadoc org.apache.log4j.PatternLayout   
log4j.appender.A1.layout.ConversionPattern=[%p] [%d{yyyyMMMdd  HH\:mm\:ss}]\#%l %c %m %n    
  
#设置R的日志输出控制台  
log4j.appender.R=org.apache.log4j.RollingFileAppender  
#设置R的输出日彿  
log4j.appender.R.File=example.log  
#设置R的日志最大限冿  
log4j.appender.R.MaxFileSize= 10000KB  
# 暿多只保存䶿个备份文乿  
log4j.appender.R.MaxBackupIndex=20  
#设置使用灵活布局  
log4j.appender.R.layout=org.apache.log4j.PatternLayout  
#灵活定义输出格式 具体查看log4j javadoc org.apache.log4j.PatternLayout   
log4j.appender.R.layout.ConversionPattern=[%p] [%d{yyyyMMMdd  HH\:mm\:ss}]\#%l %t  %m %n    
  
######################################  
#hibernate 相关配置                      #  
######################################  
  
###输出hibernate调试过程中的错误日志  
log4j.logger.org.hibernate=error  
###输出HQL查询调试日志  
log4j.logger.org.hibernate.hql.ast.AST=error  
### 输出SQL语句调试日志  
log4j.logger.org.hibernate.SQL=error  
### 输出 JDBC参数查询的日彿  
log4j.logger.org.hibernate.type=error  
 ### 输出缓存日志   
log4j.logger.org.hibernate.cache=error  
### 输出事务日志  
log4j.logger.org.hibernate.transaction=error  
###输出获取JDBC资源日志  
log4j.logger.org.hibernate.jdbc=error 